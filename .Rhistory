install.packages("Quandl")
library(Quandl)
library(Quandl)
cashFlow <- Fred/CNCF
library(FRED/CNCF)
library("FRED/CNCF")
cashFlow <- Quandl("FRED/CNCF")
getwd()
setwd("../../.."
)
getwd()
setwd("cygwin64/home/")
setwd("hill/TFO/")
getwd()
str(cashFlow)
head(cashFlow)
cashFlow <- Quandl("FRED/STFAFCXDFBANA")
cashFlow
que <- Quandl.search(query = "cash flow", source = "SEC")
que
que$name
que[, name]
str(que)
que[[name]]
que[1][1]
que[1][1][1]
que[[1]]
que[[1]][[1]]
for(seq_along(que))[i]
i = 1
for(seq_along(que))[i]
for(seq_along(que)[i]
for(seq_alongque))[i]
for(seq_along)[i]
lapply(que)
for(seq_along(que[[x]])) i
?for
i
?seq_along
for(x in seq_along(que[[x]])) i
length(que)
for(seq_along(length(que))) i
for(i in seq_along(length(que)) i
for(i in seq_along(length(que))) i
for(i in seq_along(length(que))) print "i"
for(i in seq_along(length(que))) print(i)
for(i in seq_along(que)) print(i)
for(i in seq_along(que)) i
for(i in seq_along(que)) print(que[[i]][[1]])
que <- Quandl.search(query = "Total Cash Flow From Operating Activities", source = "SEC")
for(i in seq_along(que)) print(que[[i]][[1]])
que[[1]]
cashFlow <- Quandl("SEC/ABCO_INCREASEDECREASENETCASHFLOWFROMOPERATINGACTIVITIES_Q")
cashFlow
quit()
install.packages("ggplot2")
install.packages("plotly")
source('C:/cygwin64/home/hill/TFO/realEstateFlipper/flipPredictTest.R')
errorPlotInterSize
errorPlotInterSize <- ggplotly(errorPlotSize)
errorPlotInterSize
errorPlotInterPrice
errorPlotPrice <- ggplot(flipReportComplete, aes(x = Sale.Date, y = futureActualSellPrice)) +
geom_segment(aes(xend = Sale.Date, yend = predictedSalePrice), alpha = .5) +
geom_point(aes(color = priceResidual, size = abs(priceResidual))) +
scale_color_gradient2(low = "blue", mid = "white", high = "red") +
guides(color = FALSE, size = FALSE) +
geom_point(aes(y = predictedSalePrice), shape = 1) +
theme_bw()
errorPlotInterPrice <- ggplotly(errorPlotPrice)
errorPlotInterPrice
flippedSplitReport[,"daysHeld"] <- NA
flippedSplitReport[,28] <- sapply(1:nrow(flippedSplitReport), function(x) {
if(flippedSplitReport[x, 23] == flippedSplitReport[x+1, 23] &
!is.na(flippedSplitReport[x, 23] == flippedSplitReport[x+1, 23])) {flippedSplitReport[x+1, 3] - flippedSplitReport[x, 3]} else NA})
head(flippedSplitReport)
flipReportComplete <- flippedSplitReport[complete.cases(flippedSplitReport),
]
head(flipReportComplete)
flipAgeReport <- flipReportComplete[order(flipReportComplete[,28])]
flipAgeReport <- flipReportComplete[order(flipReportComplete[,28]),]
head(flipAgeReport, 15)
flipReportComplete[,"priceResidual"] <- flipReportComplete$futureActualSellPrice -
flipReportComplete$predictedSalePrice
head(flipAgeReport, 15)
flipAgeReport[,"priceResidual"] <- flipAgeReport$futureActualSellPrice -
flipAgeReport$predictedSalePrice
head(flipAgeReport, 15)
flipAgeReport[,"dollarPSResidual"] <- flipAgeReport$futureActualDollarPerSF -
predHouseDollarPerSFNewBuild
flipAgeReport[,"dollarPSResidual"] <- flipAgeReport$futureActualDollarPerSF -
flipAgeReport$predHouseDollarPerSFNewBuild
head(flipAgeReport, 15)
tail(flipAgeReport, 15)
