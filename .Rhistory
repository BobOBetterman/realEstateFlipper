allHands
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[6]])
str(allHands[[8]])
allHands[[8]][2, 1] = 3
allHands[[8]]
allHands[[8]][3, 1] = A
allHands[[8]][3, 1] = "A"
allHands[[8]]
what_hand(allHands[[8]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
what_hand(allHands[[1]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
what_hand(allHands[[2]])
what_hand(allHands[[3]])
what_hand(allHands[[4]])
allHands[[4]][,"rank"]
x = allHands[[4]][,"rank"]
x
y = table(x)
y
ranks_acehigh = c(2:10,"J","Q","K","A")
rank_i_ah = sort( sapply(hand[,"rank"],function(x) which(x == ranks_acehigh)) )
rank_i_ah = sort( sapply(allHands[[4]][,"rank"],function(x) which(x == ranks_acehigh)) )
rank_i_ah
y = table(rank_i_ah)
y
str(y)
name(y == 2)
y == 2
?table
names(y == 2)
match(2, y)
match(1, y)
names(y[match(2, y)])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
what_hand(allHands[[2]])
what_hand(allHands[[3]])
what_hand(allHands[[4]])
what_hand(allHands[[5]])
what_hand(allHands[[6]])
what_hand(allHands[[7]])
what_hand(allHands[[8]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[2]])
what_hand(allHands[[4]])
str(what_hand(allHands[[2]]))
str(what_hand(allHands[[4]]))
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
str(what_hand(allHands[[1]]))
what_hand(allHands[[1]])
what_hand(allHands[[2]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
x = c(1, 4)
str(x)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
what_hand(allHands[[2]])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
what_hand(allHands[[1]])
what_hand(allHands[[2]])
what_hand(allHands[[3]])
what_hand(allHands[[4]])
what_hand(allHands[[5]])
what_hand(allHands[[6]])
what_hand(allHands[[7]])
what_hand(allHands[[8]])
?vector
?data.frame
?matrix
x = matrix(8, 2)
x
x = matrix(nrow = 8, ncol = 2)
x
x = matrix(0, nrow = 8, ncol = 2)
x
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
allHands
handWinner()
handRanks
handRanks[1, ]
x = handRanks[1, ]
x
x[1]
x[2]
ranks_acehigh = c(2:10,"J","Q","K","A")
rank_i_ah = sort( sapply(allHands[[2]][,"rank"],function(x) which(x == ranks_acehigh)) )
rank_i_ah
rank_i_ah[3]
as.integer(rank_i_ah[3])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1:2]]
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
ranks_acehigh = c(2:10,"J","Q","K","A")
rank_i_ah = sort( sapply(allHands[[2]][,"rank"],function(x) which(x == ranks_acehigh)) )
rank_i_ah
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
dealerHandRanks = sort( sapply(allHands[[1]][,"rank"],function(x) which(x == ranks_acehigh)) )
dealerHandRanks
dealerHandRanks[1]
str(dealerHandRanks[1])
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[2]]
allHands[[1]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
ranks_acehigh = c(2:10,"J","Q","K","A")
playerHandRanks = sort( sapply(allHands[[2]][,"rank"],function(x) which(x == ranks_acehigh)) )
playerHandRanks
(handRanks[2, ])[1] > 1 || ((handRanks[2, ])[1] == 1 && playerHandRanks[3] > 10 && playerHandRanks[2] > 5 && playerHandRanks[1] > 3)
(handRanks[2, ])[1] > 1
(handRanks[2, ])[1] == 1
playerHandRanks[3] > 10
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
playerPayout
allHands[[1]]
allHands[[2]]
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
?plot
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
plot(finalStack)
allHands
length(allHands)
handRanks
handRanks[2]
handRanks[2, ]
?sum
sum(handRanks)
sum(handRanks[2, ])
?rep
rep(c(1,2), 2, 20)
rep(c(1,2), 2, 20, 2)
rep(1:3, 2, 20, 2)
rep(1:3, 20, 2)
rep(1:3, 2)
rep(1:3, length.out = 20, 2)
rep(1:3, length.out = 20)
rep(1:3, length.out = 20, each = 2)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
warnings()
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
numHands = 50
whoIsBank = rep(1:numBank, length.out = numHands, each = 2)
whoIsBank
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
finalStack
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
plot(finalStack)
min(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
source('D:/programming/personal/bankingSimulation/bankingSimulation.R')
min(finalStack)
plot(finalStack)
var(finalStack)
?var
R.version
getwd
getwd()
setwd("D:/programming/work/")
source('D:/programming/work/realEstateFlipper/realEstateFlipper/realEstateFlipper.R')
source('D:/programming/work/realEstateFlipper/realEstateFlipper/realEstateFlipper.R')
install.packages("lubridate")
source('D:/programming/work/realEstateFlipper/realEstateFlipper/realEstateFlipper.R')
hist(propSoldOneYear)
summary(propSoldOneMonth)
hist(propSoldOneYear[,22])
?hist
hist(propSoldOneYear[,22], breaks = "Sturges")
hist(propSoldOneYear[,22], breaks = "Scott")
hist(propSoldOneYear[,22], breaks = "FD")
hist(propSoldOneYear[,22], breaks = "Scott")
hist(propSoldOneYear[,22], breaks = "FD")
hist(propSoldSixMonths[,22], breaks = "Sturges")
hist(propSoldSixMonths[,22], breaks = "Scott")
hist(propSoldSixMonths[,22], breaks = "FD")
hist(propSoldOneMonth[,22], breaks = "Sturges")
hist(propSoldOneMonth[,22], breaks = "Scott")
hist(propSoldOneMonth[,22], breaks = "FD")
hist(propSoldOneYear[,22], breaks = "Sturges")
hist(propSoldSixMonths[,22], breaks = "Sturges")
hist(propSoldOneYear[,22], breaks = "Scott")
hist(propSoldSixMonths[,22], breaks = "Scott")
hist(propSoldSixMonths[,22], breaks = "Sturges")
hist(propSoldOneYear[,22], breaks = "Sturges")
histTest <- hist(propSoldOneYear[,22], breaks = "Sturges")
histTest
histTestStu <- hist(propSoldOneYear[,22], breaks = "Sturges")
histTestSco <- hist(propSoldOneYear[,22], breaks = "Scott")
histTestFD <- hist(propSoldOneYear[,22], breaks = "FD")
histTestSco
histTestFD
histSixStu <- hist(propSoldSixMonths[,22], breaks = "Sturges")
histSixSco <- hist(propSoldSixMonths[,22], breaks = "Scott")
histSixFD <- hist(propSoldSixMonths[,22], breaks = "FD")
histSixStu
histSixSco
histSixFD
histTestFD
hist(histTestFD)
plot(histTestFD)
if(propSoldOneYear[,22] >= 1000 && propSoldOneYear < 2000)
propSoldOneYear[,22] >= 1000 && propSoldOneYear < 2000
propSoldOneYear[,22] >= 1000 && propSoldOneYear[,22] < 2000
propSoldOneYear[,22] >= 1000
propSoldOneYear[,22] >= 1000 & propSoldOneYear[,22] < 2000
summary(propSoldOneYear[propSoldOneYear[,22] >= 1000 & propSoldOneYear[,22] < 2000, 25])
mean(propSoldOneYear[propSoldOneYear[,22] >= 1000 & propSoldOneYear[,22] < 2000, 25])
?sapply
for(i in 1:26){}
for(i in 1:26){}
for(i in 1:26){
for(i in 1:25) {
meanOneYear[i] <- mean(propSoldOneYear[propSoldOneYear[,22] >= (i*1000) & propSoldOneYear[,22] < ((i+1)*1000), 25])
}
meanOneYear <- numeric()
for(i in 1:25) {
meanOneYear[i] <- mean(propSoldOneYear[propSoldOneYear[,22] >= (i*1000) & propSoldOneYear[,22] < ((i+1)*1000), 25])
}
meanOneYear
plot(meanOneYear)
summary(meanOneYear)
summary(meanOneYear)$median
summary(meanOneYear)[3]
meanOverTime <- numeric()
meanOverTime[1] <- propSoldOneYear[,25]
meanOverTime[2] <- propSoldSixMonths[,25]
meanOverTime[3] <- propSoldOneMonth[,25]
meanOverTime <- numeric()
meanOverTime[1] <- mean(propSoldOneYear[,25])
meanOverTime[2] <- mean(propSoldSixMonths[,25])
meanOverTime[3] <- mean(propSoldOneMonth[,25])
meanOverTime
plot(meanOverTime)
